{
  "openapi": "3.0.3",
  "info": {
    "title": "Eskalate API",
    "version": "1.0.0",
    "description": "API documentation for Eskalate job platform"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserRegister": {
        "type": "object",
        "required": ["name", "email", "password", "role"],
        "properties": {
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "format": "email", "example": "john@example.com" },
          "password": { "type": "string", "example": "StrongPassword123!" },
          "role": { "type": "string", "enum": ["applicant", "company"], "example": "applicant" }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string", "format": "email", "example": "john@example.com" },
          "password": { "type": "string", "example": "StrongPassword123!" }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "location": { "type": "string" },
          "status": { "type": "string", "enum": ["Draft", "Open", "Closed"] },
          "createdBy": { "type": "string", "format": "uuid" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "applicantId": { "type": "string", "format": "uuid" },
          "jobId": { "type": "string", "format": "uuid" },
          "resumeLink": { "type": "string" },
          "coverLetter": { "type": "string" },
          "status": { "type": "string", "enum": ["Applied", "Reviewed", "Interview", "Rejected", "Hired"] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRegister" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input or user already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserLogin" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in, JWT token returned"
          },
          "401": {
            "description": "Invalid credentials or email not verified"
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "summary": "Verify email with token",
        "tags": ["Auth"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "description": "Verification token sent by email"
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },

    "/jobs": {
      "post": {
        "summary": "Create a new job (Company only)",
        "tags": ["Jobs"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "status"],
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "location": { "type": "string" },
                  "status": { "type": "string", "enum": ["Draft", "Open", "Closed"] }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Job created successfully" },
          "403": { "description": "Unauthorized (not company)" }
        }
      },
      "get": {
        "summary": "Get list of jobs (Applicant only)",
        "tags": ["Jobs"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Job" }
                }
              }
            }
          },
          "403": { "description": "Unauthorized (not applicant)" }
        }
      }
    },
    "/jobs/my": {
      "get": {
        "summary": "Get jobs created by authenticated company",
        "tags": ["Jobs"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of company jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Job" }
                }
              }
            }
          },
          "403": { "description": "Unauthorized (not company)" }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "summary": "Get job by ID",
        "tags": ["Jobs"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Job object",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Job" }
              }
            }
          },
          "404": { "description": "Job not found" }
        }
      },
      "put": {
        "summary": "Update job by ID (Company only)",
        "tags": ["Jobs"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "location": { "type": "string" },
                  "status": { "type": "string", "enum": ["Draft", "Open", "Closed"] }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Job updated successfully" },
          "403": { "description": "Unauthorized (not company)" },
          "404": { "description": "Job not found" }
        }
      },
      "delete": {
        "summary": "Delete job by ID (Company only)",
        "tags": ["Jobs"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": { "description": "Job deleted successfully" },
          "403": { "description": "Unauthorized (not company)" },
          "404": { "description": "Job not found" }
        }
      }
    },

    "/applications/{id}/apply": {
      "post": {
        "summary": "Apply to a job (Applicant only)",
        "tags": ["Applications"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "resume": {
                    "type": "string",
                    "format": "binary"
                  },
                  "coverLetter": {
                    "type": "string"
                  }
                },
                "required": ["resume"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Application submitted successfully" },
          "400": { "description": "Bad request, duplicate application or missing resume" },
          "403": { "description": "Unauthorized (not applicant)" }
        }
      }
    },
    "/applications/my": {
      "get": {
        "summary": "Get applications by authenticated applicant",
        "tags": ["Applications"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Application" }
                }
              }
            }
          },
          "403": { "description": "Unauthorized (not applicant)" }
        }
      }
    },
    "/applications/job/{jobId}": {
      "get": {
        "summary": "Get applications for a job (Company only)",
        "tags": ["Applications"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "200": {
            "description": "List of applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Application" }
                }
              }
            }
          },
          "403": { "description": "Unauthorized (not company)" }
        }
      }
    },
    "/applications/{id}/status": {
      "put": {
        "summary": "Update application status (Company only)",
        "tags": ["Applications"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["Applied", "Reviewed", "Interview", "Rejected", "Hired"]
                  }
                },
                "required": ["status"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Application status updated" },
          "403": { "description": "Unauthorized (not company)" },
          "404": { "description": "Application not found" }
        }
      }
    }
  }
}
